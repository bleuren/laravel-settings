<?php

declare(strict_types=1);

return [
    /*
    |--------------------------------------------------------------------------
    | 緩存前綴
    |--------------------------------------------------------------------------
    |
    | 設定值在緩存中的鍵名前綴，可用於區隔不同應用的設定。
    |
    */
    'cache_prefix' => 'settings.',

    /*
    |--------------------------------------------------------------------------
    | 設定模型
    |--------------------------------------------------------------------------
    |
    | 指定用於處理設定的 Eloquent 模型類別。
    | 可以使用套件預設的 Setting 模型，或指定自定義模型。
    | 自定義模型需要使用 HasSettings trait 並包含必要的欄位。
    |
    */
    'model' => env('SETTINGS_MODEL', \Bleuren\LaravelSetting\Setting::class),

    /*
    |--------------------------------------------------------------------------
    | 預載入設定
    |--------------------------------------------------------------------------
    |
    | 是否在應用啟動時預載入常用設定到記憶體中，以提高性能。
    |
    */
    'eager_load' => env('SETTINGS_EAGER_LOAD', false),

    /*
    |--------------------------------------------------------------------------
    | 預載入的設定鍵
    |--------------------------------------------------------------------------
    |
    | 當啟用預載入時，這些設定將在應用啟動時被載入到記憶體中。
    | 只包含最常用的設定以避免佔用過多記憶體。
    |
    */
    'eager_load_keys' => [
        // 在此處列出需要預載入的設定鍵
        // 例如: 'site_name', 'site_logo', 'maintenance_mode'
    ],

    /*
    |--------------------------------------------------------------------------
    | 資料庫連接
    |--------------------------------------------------------------------------
    |
    | 指定設定表使用的資料庫連接。設為 null 時將使用預設連接。
    |
    */
    'database_connection' => env('SETTINGS_DB_CONNECTION', null),

    /*
    |--------------------------------------------------------------------------
    | 設定表名稱
    |--------------------------------------------------------------------------
    |
    | 指定用於存儲設定的資料表名稱。
    |
    */
    'table' => 'settings',
];
